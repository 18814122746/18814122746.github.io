<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[next主题配置]]></title>
    <url>%2F2018%2F06%2F17%2Fnext%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[NexT 是 Hexo 下最热门的主题之一，下面简单简介 NextT 主题的配置，在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。为了描述方便，在以下说明中，将前者称为 站点配置文件，后者称为 主题配置文件。 一、安装NextT1、下载主题把主题文件下载到安装目录的 theme 目录下12$ cd your-hexo-site$ git clone https://github.com/iissnan/hexo-theme-next themes/next 2、启用主题打开 站点配置文件， 找到 theme 字段，并将其值更改为 next。1theme: next 到此，NexT 主题安装完成。下一步我们将验证主题是否正确启用。在切换主题之后、验证之前， 我们最好使用 hexo clean 来清除 Hexo 的缓存。 注意：修改 站点配置文件 需求重启服务器才能生效，修改 主题配置文件 不需要重启服务器。重启步骤为在服务器启动控制台 ctrl + c，然后 $ hexo server [--debug] 二、主题设置1、外观 scheme 设置修改 主题配置文件，查找 scheme 关键字，将你需用启用的 scheme 前面注释 # 去除即可 Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白 Mist - Muse 的紧凑版本，整洁有序的单栏外观 Pisces - 双栏 Scheme，小家碧玉似的清新 Gemini - 紧凑集中版双栏 Scheme，本网站采用的主题 12345# Schemes#scheme: Muse#scheme: Mist#scheme: Piscesscheme: Gemini 2、语言 language 设置编辑 站点配置文件 （针对所有主题下的文件）或 主题配置文件 (针对本主题下的文件)下的 language，例如启用简体中文就改成 zh-Hans1language: zh-Hans 3、设置菜单1）启用/禁用菜单编辑 主题配置文件，设定菜单内容，对应的字段是 menu。 菜单内容的设置格式是：item name: link。其中 item name 是一个名称，这个名称并不直接显示在页面上，她将用于匹配图标以及翻译。把需要启动的菜单项前面的 # 去掉。也可以新增自定义菜单项。123456789menu: home: / || home # about: /about/ || user tags: /tags/ || tags categories: /categories/ || th # archives: /archives/ || archive # schedule: /schedule/ || calendar # sitemap: /sitemap.xml || sitemap # commonweal: /404/ || heartbeat 默认的菜单项如下： 键值 设定值 显示文本（简体中文） home home: / 主页 archives archives: /archives 归档页 categories categories: /categories 分类页 tags tags: /tags 标签页 schedule schedule: /schedule 日程表 about about: /about 关于 sitemap sitemap: /sitemap 站点地图 commonweal commonweal: /404.html 公益 404 其中除了 home 和 archives 页面，其他页面都需要手动创建，例如新建 tags 页面 切换到 Hexo 根目录下，使用 hexo new page tags 新建 tags 页面 编辑 /source/tags/index.md 文件，在头文件部分 front-matter 添加 type: &quot;tags&quot;，如需要关闭评论添加 comments: false 2）设置菜单显示文字修改 languages/{language}.yml 文件，如果简体中文对应 languages/zh-Hans.yml 文件下的 menu 字段12345678910menu: home: 首页 archives: 归档 categories: 分类 tags: 标签 about: 关于 search: 搜索 schedule: 日程表 sitemap: 站点地图 commonweal: 公益404 修改字段值直接影响页面上菜单文字显示，或者新增字段值，字段名要与上面第一步设置的自定义菜单名称对应。 4、设置侧栏修改 主题配置文件 文件中的 sidebar 字段 1）设置侧栏位置 left - 靠左放置 right - 靠右放置 12sidebar: position: left 2）设置侧栏显示的时机 post - 默认行为，在文章页面（拥有目录列表）时显示 always - 在所有页面中都显示 hide - 在所有页面中都隐藏（可以手动展开） remove - 完全移除 12sidebar: display: post 5、设置头像修改 主题配置文件 下的 avatar 字段，设成头像的链接1avatar: images/avatar.png 6、设置作者昵称编辑 站点配置文件，设置 author 字段 7、设置站点名称编辑 站点配置文件，设置 description 字段 8、设置社交编辑 主题配置文件 1）设置社交链接修改 social 字段，其键值格式是 显示文本: 链接地址。1234567891011social: GitHub: https://github.com/18814122746 || github #E-Mail: mailto:yourname@gmail.com || envelope #Google: https://plus.google.com/yourname || google #Twitter: https://twitter.com/yourname || twitter #FB Page: https://www.facebook.com/yourname || facebook #VK Group: https://vk.com/yourname || vk #StackOverflow: https://stackoverflow.com/yourname || stack-overflow #YouTube: https://youtube.com/yourname || youtube #Instagram: https://instagram.com/yourname || instagram #Skype: skype:yourname?call|chat || skype 2）设置链接图标修改 social_icons: 字段，其键值格式是 匹配键: Font Awesome 图标名称，匹配键 与上一步所配置的链接的 显示文本 相同（大小写严格匹配）1234567# Social Iconssocial_icons: enable: true # Icon Mappings GitHub: github Twitter: twitter 微博: weibo 9、设置背景动画NexT 自带 canvas_nest 和 three_waves 两种背景动画效果，编辑 主题配置文件 将对应的字段改成 true 或 false 即可，只能同时开启一种背景动画效果。 三、第三方插件1、安装评论系统理论上 Hexo 支持 DISQUS、Facebook Comments、HyperComments、网易云跟帖和来必力等评论插件，但是由于国内被墙或者服务商不再提供服务等原因，选择来必力作为我们的评论系统。 1）注册账号登陆 来必力官网 注册账号 2）安装点击 右上角头像 —— 管理页面，安装 City 免费版 3）获取代码打开 管理页面 中的 代码管理，复制 data-uid 中的值 4）编辑配置文件编辑 主题配置文件 中的 livere_uid 字段，把刚才复制的 data-uid 的值粘贴进去 2、百度统计访问次数1）注册账号登陆 百度统计官网，注册账号 2）获取代码点击 管理 —— 代码管理 —— 代码获取，找到类似于 hm.src = &quot;https://hm.baidu.com/hm.js?xxx&quot;; 的代码，复制 .js? 后面的统计脚本id 3)编辑配置文件编辑 主题配置文件 中的 baidu_analytics 字段，把刚才粘贴的值粘贴进去 3、百度分享编辑 主题配置文件 中的baidushare 字段，改成123baidushare: type: button baidushare: true 4、本地搜索 Local Search1）安装 hexo-generator-searchdb在安装目录下执行1$ npm install hexo-generator-searchdb --save 2）编辑 站点配置文件新增以下内容到任意位置：12345search: path: search.xml field: post format: html limit: 10000 3）编辑 主题配置文件查找 local_search 字段，把值改为 true123# Local searchlocal_search: enable: true 四、参考Hexo中文使用文档Hexo的Next主题详细配置hexo的next主题个性化教程：打造炫酷网站hexo添加评论功能hexo next主题为博客添加分享功能 &lt;未完待续&gt;]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>next</tag>
        <tag>主题</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo+GitHub搭建个人博客教程]]></title>
    <url>%2F2018%2F06%2F13%2Fhexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[Hexo 是一款基于Node.js的支持Markdown的静态站点生成框架，利用 Hexo+GitHub 可以轻松打造属于个人的免费博客。经过本人一番摸索最终搭建成功，心得分享如下。 一、环境配置在搭建之前电脑需要的环境配置如下： git node.js github pages 仓库 我们可以在控制台中输入12$ node -v #查看node.js版本$ git --version #查看git版本 如果没有报错则说明git和node.js已经安装成功，可直接跳到第3点,如果报错则需要重新安装 1、安装git1）windows用户直接下载git安装程序根据提示进行安装 2）mac用户通过homebrew进行安装，没有安装的需要先安装homebrew1$ brew install git 也可通过下载git安装程序进行安装 3）linux用户通过命令行安装1$ sudo apt-get install git-core 安装完成后再在控制台输入1$ git --version 如果没有报错则说明安装成功 2、安装node.js1）下载安装程序（推荐）直接下载node.js安装程序进行安装，比较快捷省事，适用于mac和windows用户 2）使用nvm安装cURL:1$ curl https://raw.github.com/creationix/nvm/master/install.sh | sh Wget:1$ wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh 安装完成后，重启终端并执行下列命令即可安装 Node.js。1$ nvm install stable 安装完成后再在控制台输入1$ node -v 如果没有报错则说明安装成功 3、github pages我们用来托管博客的服务叫做 Github Pages，它是 Github 用来提供给个人/组织或者项目的网页服务，只需要部署到你的 Github Repository，推送代码，便可以实时呈现。 1）申请github账号首先你需要申请注册一个 github 账号 2）创建托管仓库点击右上角 New Repository 新建一个仓库来作为托管仓库，注意命名为username.github.io（username是你的账号名)。 GitHub Pages 有两种类型：User/Organization Pages 和 Project Pages，两者的区别是： User Pages 是用来展示用户的，而 Project Pages 是用来展示项目的。 用于存放 User Pages 的仓库必须使用username.github.io的命名规则，而 Project Pages 则没有特殊的要求。 User Pages 将使用仓库的 master 分支，而 Project Pages 将使用 gh-pages 分支。 User Pages 通过 http(s)://username.github.io 进行访问，而 Projects Pages通过 http(s)://username.github.io/projectname 进行访问。 一般搭建个人博客都是用 User Pages，所以命名需要按照规范命名。 3）配置SSH（可跳过）SSH实现本地 git 项目和远程 github 的连接，github 通过 SSH 密钥识别特定的可信任电脑，该部分电脑在向 github 推送的时候不需要输入用户名和密码 1. 查看电脑是否已经配置 ssh key1$ ls -al ~/.ssh 默认情况下，public keys的文件名是以下的格式之一：id_dsa.pub、id_ecdsa.pub、id_ed25519.pub、id_rsa.pub。因此，如果列出的文件有public和private钥匙对（例如id_ras.pub和id_rsa），证明已存在SSH keys。如果提示 No such file or directory 则说明未安装 2. 生成新的 SSH Key第一次安装完 git 需要先初始化配置 git（已经初始化过可跳过）,这里的用户名和邮箱和github上的用户名和密码要对应12git config –global user.name &quot;yourusername&quot;git config --global user.email &quot;youremail@example.com&quot; 生成ssh key，这里的邮箱和上面设置的邮箱对应1$ ssh-keygen -t rsa -C &quot;youremail@example.com&quot; 输入密码之类的可以省略，一路回车就行 3. 复制key1cat ~/.ssh/id_rsa.pub 复制执行命令后显示的内容 4. 添加到github中点击右上角的 Settings –&gt; SSH and GPG keys –&gt; New SSH key ，Title 自由填写，Key 粘贴刚才复制的那段代码，点击 Add SSH Key 5. 测试连接控制台输入1$ ssh -T git@github.com 如果看到123The authenticity of host &apos;github.com (207.97.227.239)&apos; can&apos;t be established.RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.Are you sure you want to continue connecting (yes/no)? 输入yes，回车看到12Hi username! You&apos;ve successfully authenticated, but GitHub does notprovide shell access. 表示连接成功，ssh的配置至此完成 二、安装Hexohexo的安装相当简单，在确保以上环境已经配置好的情况下 1、下载Hexo1$ npm install -g hexo-cli 有些教程会用命令 $ npm install -g hexo，作用同上，均为下载Hexo的安装包 2、初始化安装执行以下命令Hexo可把文件安装到指定文件夹123$ hexo init &lt;folder&gt;$ cd &lt;folder&gt;$ npm install 新建一个名为的文件夹（可带路径），通过 hexo init 初始化该文件夹，然后切换到该文件夹中，执行 npm install 进行安装 三、使用Hexo1、Hexo目录简介如果以上的安装成功，在安装目录下将会出现以下的文件结构1234567├── _config.yml├── package.json├── scaffolds├── source| ├── _drafts| └── _posts└── themes _config.yml：网站的全局配置文件 package.json：应用程序的信息 scaffolds：模版文件夹，Hexo的模板是指在新建的markdown文件中默认填充的内容。当您新建文章时，Hexo 会根据 scaffold 来建立文件。例如，如果您修改scaffold/post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改。 source：资源文件夹，除 _posts 文件夹之外，开头命名为 _ (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去。例如用于域名解析的 CNAME 文件就可以放到该文件夹中，每次部署的时候都会自动添加该文件。 themes：主题文件夹，Hexo 会根据主题来生成静态页面。 2、启动输入命令1$ hexo server 进行启动，可简化为 $ hexo s ，也可启动调试模式 $ hexo server --debug 3、创建文章执行以下命令可新建文章1$ hexo new [layout] &lt;title&gt; 布局（layout）hexo有三种默认布局，用户也可以自定义布局，不同布局对应不同的存储路径 post：一般文章布局，自定义布局和post的对应的存储路径为 source/_posts page：页面布局，例如可以用于生成标签（tags）或分类（categories）等主页面，就是点击菜单直接显示的页面，对应的存储路径为 source draft：草稿布局，草稿默认不会显示在页面上，已完成的草稿可用 $ hexo publish [layout] &lt;title&gt; 来发布，对应的存储路径为 source/_drafts 标题（title）Hexo 默认以标题做为文件名称，但您可编辑 new_post_name 参数来改变默认的文件名称，举例来说，设为 :year-:month-:day-:title.md 可让您更方便的通过日期来管理文章。其中 :title 默认会转为小写，空格将会被替换为短杠 例如新建一篇名为 hello world 的新文章1$ hexo new post &quot;hello world&quot; source/_posts下面会自动生成一个名为 hello-world 的md文件（空格会自动转换为短杠），这就是我们新建的文章 4、编辑文章前页（Front-matter）Front-matter 是文件最上方以 — 分隔的区域，指定该文件的变量，支持的变量有： layout：布局 title：标题 date：建立日期，默认为文件建立日期 updated：更新日期，默认为文件更新日期 comments：开启文章的评论功能，默认为true tags：标签，不适用于布局为 page 的的页面 categories：分类，不适用于布局为 page 的的页面 permalink：覆盖文章网址 分类（categories）和标签（tags）的区别：分类具有顺序性和层次性，标签没有顺序和层次。例如123categories:- Diary- Life 会使 Life 成为 Diary 的子类，而不是并列分类。 例如编辑一篇新文章的 front-matter 为1234567891011---title: hello-worlddate: 2018-06-10 16:15:04categories:- Diary- Lifetags:- happy- friendcomments: false--- —以下的内容可自由编辑 5、发布文章我们在本地编辑的文章只能在本地查看，如果想把文章发布到网上，我们需要把文章上传到上面配置好的 github pages 中。在发布文章前我们需要进行一些配置。 配置_config.yml文件编辑安装目录下的_config.yml文件，找到下面 # Deployment部分内容，把 type 改成 git，repo 改成你自己的仓库地址，该地址可以直接上 github 上获取。12345# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: https://github.com/18814122746/18814122746.github.io.git 注意：type: 和 git之间必须带一个空格 安装deployer工具hexo-deployer-git 为hexo自动部署安装工具，可通过命令安装1$ npm install hexo-deployer-git --save 配置完后就可以发布文章。发布文章可分为清空、生成和部署三部分 1）清空主要用来清除缓存文件 (db.json) 和已生成的静态文件 (public)，执行命令1$ hexo clean 2）生成生成public静态文件夹，执行命令1$ hexo generate 也可简化成 $ hexo g 3）部署部署到 github 上面，执行命令1$ hexo deploy 也可简化成 $ hexo d在浏览器输入 https://username.github.io 就可以浏览你的刚才发布的博客，例如本人的博客网址为 https://18814122746.github.io/ ，至此 Hexo + Github 的个人博客搭建已经完成。 6、Hexo常用命令汇总123456789$ hexo init [folder] #初始化 folder 文件夹为网站根目录，如果没有 folder 默认在目前的文件夹初始化$ hexo new &lt;title&gt; #新建文章$ hexo new page &lt;title&gt; #新建页面$ hexo server #启动服务器，默认情况下，访问网址为： http://localhost:4000/$ hexo clean #清空静态文件和缓存文件$ hexo generate #生成静态文件到public目录，可简写为 hexo -g$ hexo deploy #部署文件到远程服务器，可简写为 hexo -d$ hexo help #查看帮助$ hexo version #查看Hexo的版本 模式模式可配合上述命令行进行使用，例如以调试模式启动服务器 $ hexo s --debug 1）安全模式1$ hexo --safe 在安全模式下，不会载入插件和脚本。当您在安装新插件遭遇问题时，可以尝试以安全模式重新执行。 2）安全模式1$ hexo --debug 在终端中显示调试信息并记录到 debug.log。 3）简洁模式1$ hexo --silent 参考链接Hexo官方中文文档HEXO搭建个人博客搭建个人博客-hexo+github详细完整步骤如何搭建一个独立博客——简明Github Pages与Hexo教程GitHub Pages + Hexo搭建博客使用Hexo搭建个人静态博客]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Github</tag>
        <tag>教程</tag>
      </tags>
  </entry>
</search>
